import asyncio
import aiosqlite

class DB():
    def __init__(self):
        pass

    
    def connect(self):
        try:
            self.db = aiosqlite.connect('db.sqlite3')
        except Exception as e:
            print(f"error while connecting database: {e}")

    async def init_db(self):
        async with aiosqlite.connect("db.sqlite3") as db:
            await db.execute("""
                CREATE TABLE IF NOT EXISTS users (
                    user_id INTEGER PRIMARY KEY,
                    balance INTEGER DEFAULT 0,
                    invited_by INTEGER,
                    referrals INTEGER DEFAULT 0
                )
            """)
            await db.commit()


    async def register_user(user_id, ref=None):
        db=self.db
        user = await db.execute("SELECT * FROM users WHERE user_id = ?", (user_id,))
        result = await user.fetchone()
        async with aiosqlite.connect("db.sqlite3") as db:
            if result is None:
                if ref and int(ref) != user_id:
                    await db.execute("INSERT INTO users (user_id, balance, invited_by) VALUES (?, ?, ?)", (user_id, 100, ref))
                    await db.execute("UPDATE users SET balance = balance + 50, referrals = referrals + 1 WHERE user_id = ?", (ref,))
                    await db.commit()

                    try:
                        await bot.send_message(ref, "üéâ –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –ø–æ —Ç–≤–æ–µ–π —Å—Å—ã–ª–∫–µ! –¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ 50‚ÇΩ.")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—è: {e}")

                    try:
                        await bot.send_message(user_id, "üéÅ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –¢–µ–±–µ –Ω–∞—á–∏—Å–ª–µ–Ω–æ 100‚ÇΩ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ.")
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
                else:
                    await db.execute("INSERT INTO users (user_id, balance) VALUES (?, ?)", (user_id, 0))
                    await db.commit()

    async def start(self):
        #self.connect()
        await self.init_db()